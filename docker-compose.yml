version: '2.0'

networks:
  adsbnet:

volumes:
  readsbpb_rrd:
  readsbpb_autogain:

services:

#
# readsb is the primary container which will poll the USB Radio and display a
# simple UI on http://localhost:8080/.
# 
# It can optionally pull MLAT information from other containers, controlled by
# the `PULLMLAT` environment variable before. Either comment it out or adjust
# the value with the containers and ports you are running
#
  readsb:
    image: ${READSB_PROTO_NAME}:${READSB_PROTO_TAG}
    tty: true
    container_name: readsb
    hostname: readsb
    restart: always
    devices:
      - /dev/bus/usb/${BUS}/${DEVICE}:/dev/bus/usb/${BUS}/${DEVICE}
    ports:
      - 8080:8080
      - 30005:30005
    networks:
      - adsbnet
    environment:
      - TZ=${TZ}
      - READSB_DCFILTER=true
      - READSB_DEVICE_TYPE=rtlsdr
      - READSB_FIX=true
      - READSB_GAIN=autogain
      - READSB_LAT=${LAT}
      - READSB_LON=${LONG}
      - READSB_MODEAC=true
      - READSB_RX_LOCATION_ACCURACY=2
      - READSB_STATS_RANGE=true
      - READSB_NET_ENABLE=true
      - READSB_NET_CONNECTOR=piaware,30105,beast_in;adsbx,30105,beast_in  # comment this out if you don't run piaware and/or adsbx
    volumes:
      - readsbpb_rrd:/run/collectd
      - readsbpb_autogain:/run/autogain


#
# tar1090 is an optional extra UI (served on http://localhost:8078) for details
# see the Git repo here https://github.com/wiedehopf/tar1090.
#
# It can optionally pull MLAT information from the adsbexchange container, if
# you choose not to run that then comment out the `MLATHOST` environment
# variable below
#
  tar1090:
    image: ${TAR_NAME}:${TAR_TAG}
    tty: true
    container_name: tar1090
    restart: always
    ports:
      - 8078:80
    environment:
      - BEASTHOST=readsb
      - LAT=${LAT}
      - LONG=${LONG}
      - MLATHOST=adsbx # comment this out if you don't run adsbx for MLAT
      - TZ=${TZ}
    networks:
      - adsbnet
    depends_on:
      - readsb

################################################################################
# All the containers below are to send data to various third party services.   #
# If you are happy with just the `readsb` UI then you can safely comment out   #
# the entire file from this point onwards.                                     #
################################################################################

#
# fr24feed feeds data to FlightRadar 24 - worth doing because they'll give you
# a Business level account for free if you do. 
#
# Requires setup, detailed in env-template file.
#
  fr24feed:
    image: ${FR24_NAME}:${FR24_TAG}
    tty: true
    container_name: fr24feed
    restart: always
    ports:
      - 8754:8754
    environment:
      - BEASTHOST=readsb
      - FR24KEY=${FR24_KEY}
      - MLAT=yes
      - VERBOSE_LOGGING=false
    networks:
      - adsbnet
    depends_on:
      - readsb

#
# adsbx sends data to the adsbexchange, a good, free and unfiltered adsb web 
# site - https://www.adsbexchange.com. Also has the advantage of being able
# to serve MLAT information to other containers.
# 
# Requires setup, detailed in env-template file.
#
  adsbx:
    image: ${ADSBX_NAME}:${ADSBX_TAG}
    tty: true
    container_name: adsbx
    restart: always
    environment:
      - ALT=${ALT}
      - BEASTHOST=readsb
      - LAT=${LAT}
      - LONG=${LONG}
      - SITENAME=${ADSBX_SITENAME}
      - TZ=${TZ}
      - UUID=${ADSBX_UUID}
    networks:
      - adsbnet
    depends_on:
      - readsb
#
# pfclient sends data to Planefinder (https://planefinder.net). Also serves
# a nice GUI with some interesting information about your receiver range. Web
# interface is on port 300053.
# 
# Requires setup, detailed in env-template file.
#
  pfclient:
    image: ${PFINDER_NAME}:${PFINDER_TAG}
    tty: true
    container_name: pfclient
    restart: always
    ports:
      - 30053:30053
    environment:
      - BEASTHOST=readsb
      - LAT=${LAT}
      - LONG=${LONG}
      - SHARECODE=${PFINDER_SHARE_CODE}
      - TZ=${TZ}
    networks:
      - adsbnet
    depends_on:
      - readsb

#
# piaware sends data to FlightAware (https://flightaware.com)
# 
# Requires setup, detailed in env-template file.
#
  piaware:
    image: ${PIAWARE_NAME}:${PIAWARE_TAG}
    tty: true
    container_name: piaware
    restart: always
    devices:
      - /dev/bus/usb:/dev/bus/usb
    ports:
      - 8081:80
    environment:
      - ALLOW_MLAT=yes
      - BEASTHOST=readsb
      - FEEDER_ID=$FLIGHT_AWARE_ID
      - LAT=${LAT}
      - LONG=${LONG}
      - MLAT_RESULTS=yes
      - RECEIVER_TYPE=relay
      - TZ=${TZ}
    networks:
      - adsbnet
    depends_on:
      - readsb

#
# 360 Radar (https://360radar.co.uk)
# 
# Commented out because it requires you to build the container yourself! More
# details in the README.md file in this directory
#
  # 360radar:
  #   image: ${THREE_SIXTY_NAME}:${THREE_SIXTY_TAG}
  #   tty: true
  #   container_name: 360radar
  #   restart: always
  #   environment:
  #     - BEASTHOST=readsb
  #     - TZ=${TZ}
  #     - LAT=${LAT}
  #     - LONG=${LONG}
  #     - ALT=${ALT}
  #     - SITENAME=${THREE_SIXTY_SITENAME}
  #     - REGION=${THREE_SIXTY_REGION}
  #   networks:
  #     - adsbnet
  #   depends_on:
  #     - readsb
